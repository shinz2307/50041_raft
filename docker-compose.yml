version: "3.9"
services:
  app0:
    build:
      context: ./server
      dockerfile: Dockerfile.server
    container_name: app0
    command: ["./main"]
    ports:
      - "50000:50000" # Expose the port for this node
    environment:
      - NODE_ID=0
      # - PEERS=0,1,2,3,4 # Default: 4 peer nodes
      # - PEERS=0,1,2,3 # Scalability test: 3 peer node
      # - PEERS=0,1,2,3,4,5 # Scalability test: 5 peer node
      - PEERS=0,1,2,3,4,5,6,7,8,9,10 # Scalability test: 10 peer node

  app1:
    build:
      context: ./server
      dockerfile: Dockerfile.server
    container_name: app1
    command: ["./main"]
    ports:
      - "50001:50001"
    environment:
      - NODE_ID=1
      # - PEERS=0,1,2,3,4 # Default: 4 peer nodes
      # - PEERS=0,1,2,3 # Scalability test: 3 peer node
      # - PEERS=0,1,2,3,4,5 # Scalability test: 5 peer node
      - PEERS=0,1,2,3,4,5,6,7,8,9,10 # Scalability test: 10 peer node

  app2:
    build:
      context: ./server
      dockerfile: Dockerfile.server
    container_name: app2
    command: ["./main"]
    ports:
      - "50002:50002"
    environment:
      - NODE_ID=2
      # - PEERS=0,1,2,3,4 # Default: 4 peer nodes
      # - PEERS=0,1,2,3 # Scalability test: 3 peer node
      # - PEERS=0,1,2,3,4,5 # Scalability test: 5 peer node
      - PEERS=0,1,2,3,4,5,6,7,8,9,10 # Scalability test: 10 peer node

  app3:
    build:
      context: ./server
      dockerfile: Dockerfile.server
    container_name: app3
    command: ["./main"]
    ports:
      - "50003:50003"
    environment:
      - NODE_ID=3
      # - PEERS=0,1,2,3,4 # Default: 4 peer nodes
      # - PEERS=0,1,2,3 # Scalability test: 3 peer node
      # - PEERS=0,1,2,3,4,5 # Scalability test: 5 peer node
      - PEERS=0,1,2,3,4,5,6,7,8,9,10 # Scalability test: 10 peer node

  app4:
    build:
      context: ./server
      dockerfile: Dockerfile.server
    container_name: app4
    command: ["./main"]
    ports:
      - "50004:50004"
    environment:
      - NODE_ID=4
      # - PEERS=0,1,2,3,4 # Default: 4 peer nodes
      # - PEERS=0,1,2,3 # Scalability test: 3 peer node
      # - PEERS=0,1,2,3,4,5 # Scalability test: 5 peer node
      - PEERS=0,1,2,3,4,5,6,7,8,9,10 # Scalability test: 10 peer node
  

  app5:
    build:
      context: ./server
      dockerfile: Dockerfile.server
    container_name: app5
    command: ["./main"]
    ports:
      - "50005:50005"
    environment:
      - NODE_ID=5
      # - PEERS=0,1,2,3,4 # Default: 4 peer nodes
      # - PEERS=0,1,2,3 # Scalability test: 3 peer node
      # - PEERS=0,1,2,3,4,5 # Scalability test: 5 peer node
      - PEERS=0,1,2,3,4,5,6,7,8,9,10 # Scalability test: 10 peer node

  app6:
    build:
      context: ./server
      dockerfile: Dockerfile.server
    container_name: app6
    command: ["./main"]
    ports:
      - "50006:50006"
    environment:
      - NODE_ID=6
      # - PEERS=0,1,2,3,4 # Default: 4 peer nodes
      # - PEERS=0,1,2,3 # Scalability test: 3 peer node
      # - PEERS=0,1,2,3,4,5 # Scalability test: 5 peer node
      - PEERS=0,1,2,3,4,5,6,7,8,9,10 # Scalability test: 10 peer node

  app7:
    build:
      context: ./server
      dockerfile: Dockerfile.server
    container_name: app7
    command: ["./main"]
    ports:
      - "50007:50007"
    environment:
      - NODE_ID=7
      # - PEERS=0,1,2,3,4 # Default: 4 peer nodes
      # - PEERS=0,1,2,3 # Scalability test: 3 peer node
      # - PEERS=0,1,2,3,4,5 # Scalability test: 5 peer node
      - PEERS=0,1,2,3,4,5,6,7,8,9,10 # Scalability test: 10 peer node


  app8:
    build:
      context: ./server
      dockerfile: Dockerfile.server
    container_name: app8
    command: ["./main"]
    ports:
      - "50008:50008"
    environment:
      - NODE_ID=8
      # - PEERS=0,1,2,3,4 # Default: 4 peer nodes
      # - PEERS=0,1,2,3 # Scalability test: 3 peer node
      # - PEERS=0,1,2,3,4,5 # Scalability test: 5 peer node
      - PEERS=0,1,2,3,4,5,6,7,8,9,10 # Scalability test: 10 peer node


  app9:
    build:
      context: ./server
      dockerfile: Dockerfile.server
    container_name: app9
    command: ["./main"]
    ports:
      - "50009:50009"
    environment:
      - NODE_ID=9
      # - PEERS=0,1,2,3,4 # Default: 4 peer nodes
      # - PEERS=0,1,2,3 # Scalability test: 3 peer node
      # - PEERS=0,1,2,3,4,5 # Scalability test: 5 peer node
      - PEERS=0,1,2,3,4,5,6,7,8,9,10 # Scalability test: 10 peer node


  app10:
    build:
      context: ./server
      dockerfile: Dockerfile.server
    container_name: app10
    command: ["./main"]
    ports:
      - "50010:50010"
    environment:
      - NODE_ID=10
      # - PEERS=0,1,2,3,4 # Default: 4 peer nodes
      # - PEERS=0,1,2,3 # Scalability test: 3 peer node
      # - PEERS=0,1,2,3,4,5 # Scalability test: 5 peer node
      - PEERS=0,1,2,3,4,5,6,7,8,9,10 # Scalability test: 10 peer node

  client0:
    build:
      context: ./client
      dockerfile: ./Dockerfile.client # Use the new Dockerfile for the client
    stdin_open: true # Keeps stdin open
    tty: true # Allocates a pseudo-TTY
    container_name: client0
    command: ["./client"] # Run the client binary
    environment:
      - NAME=Carina
      - CLIENT_ID=0
    depends_on: # Ensure the client waits for the cluster to start
      - app0
      - app1
      - app2
      - app3
      - app4
      - app5
      - app6
      - app7
      - app8
      - app9
      - app10
    volumes:
      - ./logs:/app/logs

  client1:
    build:
      context: ./client
      dockerfile: ./Dockerfile.client # Use the new Dockerfile for the client
    stdin_open: true # Keeps stdin open
    tty: true # Allocates a pseudo-TTY
    container_name: client1
    command: ["./client"] # Run the client binary
    environment:
      - NAME=JK
      - CLIENT_ID=1
    depends_on: # Ensure the client waits for the cluster to start
      - app0
      - app1
      - app2
      - app3
      - app4
      - app5
      - app6
      - app7
      - app8
      - app9
      - app10
    volumes:
      - ./logs:/app/logs
