version: "3.9"
services:
  app0:
    build:
      context: ./server
      dockerfile: Dockerfile.server
    container_name: app0
    command: ["./main"]
    ports:
      - "5000:5000" # Expose the port for this node
    environment:
      - NODE_ID=0
      - PEERS=0,1,2,3,4

  app1:
    build:
      context: ./server
      dockerfile: Dockerfile.server
    container_name: app1
    command: ["./main"]
    ports:
      - "5001:5001"
    environment:
      - NODE_ID=1
      - PEERS=0,1,2,3,4

  app2:
    build:
      context: ./server
      dockerfile: Dockerfile.server
    container_name: app2
    command: ["./main"]
    ports:
      - "5002:5002"
    environment:
      - NODE_ID=2
      - PEERS=0,1,2,3,4

  app3:
    build:
      context: ./server
      dockerfile: Dockerfile.server
    container_name: app3
    command: ["./main"]
    ports:
      - "5003:5003"
    environment:
      - NODE_ID=3
      - PEERS=0,1,2,3,4

  app4:
    build:
      context: ./server
      dockerfile: Dockerfile.server
    container_name: app4
    command: ["./main"]
    ports:
      - "5004:5004"
    environment:
      - NODE_ID=4
      - PEERS=0,1,2,3,4

  client0:
    build:
      context: ./client
      dockerfile: ./Dockerfile.client # Use the new Dockerfile for the client
    container_name: client0
    command: ["./client"] # Run the client binary
    depends_on: # Ensure the client waits for the cluster to start
      - app0
      - app1
      - app2
      - app3
      - app4
